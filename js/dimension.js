// koffee 1.6.0

/*
0000000    000  00     00  00000000  000   000   0000000  000   0000000   000   000
000   000  000  000   000  000       0000  000  000       000  000   000  0000  000
000   000  000  000000000  0000000   000 0 000  0000000   000  000   000  000 0 000
000   000  000  000 0 000  000       000  0000       000  000  000   000  000  0000
0000000    000  000   000  00000000  000   000  0000000   000   0000000   000   000
 */
var Color3, Dimension, TransformNode, Vector3, colors, generate, random, ref, vec,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

ref = require('babylonjs'), Color3 = ref.Color3, TransformNode = ref.TransformNode, Vector3 = ref.Vector3;

colors = require('kxk').colors;

random = Math.random;

vec = require('./poly/math').vec;

generate = require('./poly/generate');

Dimension = (function(superClass) {
    extend(Dimension, superClass);

    function Dimension(world, scale, index) {
        var i, inst, j, pos, s, shapes;
        this.world = world;
        this.scale = scale;
        pos = [vec(2, 0, 0), vec(0, 2, 0), vec(0, 0, 2), vec(-2, 0, 0), vec(0, -2, 0), vec(0, 0, -2)][index];
        this.scene = this.world.scene;
        Dimension.__super__.constructor.call(this, 'dimension', this.scene);
        this.position.copyFrom(pos);
        s = this.scale;
        this.scaling = vec(s, s, s);
        shapes = ['h0.02C', 'h0.02O', 'h0.02D', 'h0.02djC', 'h0.02T', 'h0.02I'];
        colors = [new Color3(1, 0.5, 0.5), new Color3(0.5, 1, 0.5), new Color3(0.5, 0.5, 1), new Color3(1, 0, 1), new Color3(0, 1, 1), new Color3(1, 1, 0)];
        for (i = j = 0; j < 5; i = ++j) {
            inst = this.world.shapes.create(shapes[index], colors[index]);
            s = 1 - i * 0.2;
            inst.scaling = new Vector3(s, s, s);
            inst.parent = this;
        }
    }

    Dimension.prototype.del = function() {
        return this.dispose();
    };

    return Dimension;

})(TransformNode);

module.exports = Dimension;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGltZW5zaW9uLmpzIiwic291cmNlUm9vdCI6Ii4iLCJzb3VyY2VzIjpbIiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7O0FBQUEsSUFBQSw2RUFBQTtJQUFBOzs7QUFRQSxNQUFxQyxPQUFBLENBQVEsV0FBUixDQUFyQyxFQUFFLG1CQUFGLEVBQVUsaUNBQVYsRUFBeUI7O0FBQ3ZCLFNBQVcsT0FBQSxDQUFRLEtBQVI7O0FBQ1gsU0FBVzs7QUFDWCxNQUFRLE9BQUEsQ0FBUSxhQUFSOztBQUNWLFFBQUEsR0FBVyxPQUFBLENBQVEsaUJBQVI7O0FBRUw7OztJQUVDLG1CQUFDLEtBQUQsRUFBUyxLQUFULEVBQWlCLEtBQWpCO0FBRUMsWUFBQTtRQUZBLElBQUMsQ0FBQSxRQUFEO1FBQVEsSUFBQyxDQUFBLFFBQUQ7UUFFUixHQUFBLEdBQU0sQ0FDRixHQUFBLENBQUksQ0FBSixFQUFNLENBQU4sRUFBUSxDQUFSLENBREUsRUFFRixHQUFBLENBQUksQ0FBSixFQUFNLENBQU4sRUFBUSxDQUFSLENBRkUsRUFHRixHQUFBLENBQUksQ0FBSixFQUFNLENBQU4sRUFBUSxDQUFSLENBSEUsRUFJRixHQUFBLENBQUksQ0FBQyxDQUFMLEVBQU8sQ0FBUCxFQUFTLENBQVQsQ0FKRSxFQUtGLEdBQUEsQ0FBSSxDQUFKLEVBQU0sQ0FBQyxDQUFQLEVBQVMsQ0FBVCxDQUxFLEVBTUYsR0FBQSxDQUFJLENBQUosRUFBTSxDQUFOLEVBQVEsQ0FBQyxDQUFULENBTkUsQ0FPQSxDQUFBLEtBQUE7UUFFTixJQUFDLENBQUEsS0FBRCxHQUFTLElBQUMsQ0FBQSxLQUFLLENBQUM7UUFDaEIsMkNBQU0sV0FBTixFQUFrQixJQUFDLENBQUEsS0FBbkI7UUFFQSxJQUFDLENBQUEsUUFBUSxDQUFDLFFBQVYsQ0FBbUIsR0FBbkI7UUFFQSxDQUFBLEdBQUksSUFBQyxDQUFBO1FBQ0wsSUFBQyxDQUFBLE9BQUQsR0FBVyxHQUFBLENBQUksQ0FBSixFQUFPLENBQVAsRUFBVSxDQUFWO1FBRVgsTUFBQSxHQUFTLENBQUMsUUFBRCxFQUFTLFFBQVQsRUFBaUIsUUFBakIsRUFBeUIsVUFBekIsRUFBbUMsUUFBbkMsRUFBMkMsUUFBM0M7UUFDVCxNQUFBLEdBQVMsQ0FDTCxJQUFJLE1BQUosQ0FBVyxDQUFYLEVBQWEsR0FBYixFQUFpQixHQUFqQixDQURLLEVBRUwsSUFBSSxNQUFKLENBQVcsR0FBWCxFQUFlLENBQWYsRUFBaUIsR0FBakIsQ0FGSyxFQUdMLElBQUksTUFBSixDQUFXLEdBQVgsRUFBZSxHQUFmLEVBQW1CLENBQW5CLENBSEssRUFJTCxJQUFJLE1BQUosQ0FBVyxDQUFYLEVBQWEsQ0FBYixFQUFlLENBQWYsQ0FKSyxFQUtMLElBQUksTUFBSixDQUFXLENBQVgsRUFBYSxDQUFiLEVBQWUsQ0FBZixDQUxLLEVBTUwsSUFBSSxNQUFKLENBQVcsQ0FBWCxFQUFhLENBQWIsRUFBZSxDQUFmLENBTks7QUFTVCxhQUFTLHlCQUFUO1lBQ0ksSUFBQSxHQUFPLElBQUMsQ0FBQSxLQUFLLENBQUMsTUFBTSxDQUFDLE1BQWQsQ0FBcUIsTUFBTyxDQUFBLEtBQUEsQ0FBNUIsRUFBb0MsTUFBTyxDQUFBLEtBQUEsQ0FBM0M7WUFDUCxDQUFBLEdBQUksQ0FBQSxHQUFJLENBQUEsR0FBRTtZQUNWLElBQUksQ0FBQyxPQUFMLEdBQWUsSUFBSSxPQUFKLENBQVksQ0FBWixFQUFlLENBQWYsRUFBa0IsQ0FBbEI7WUFDZixJQUFJLENBQUMsTUFBTCxHQUFjO0FBSmxCO0lBN0JEOzt3QkFtQ0gsR0FBQSxHQUFLLFNBQUE7ZUFFRCxJQUFDLENBQUEsT0FBRCxDQUFBO0lBRkM7Ozs7R0FyQ2U7O0FBeUN4QixNQUFNLENBQUMsT0FBUCxHQUFpQiIsInNvdXJjZXNDb250ZW50IjpbIiMjI1xuMDAwMDAwMCAgICAwMDAgIDAwICAgICAwMCAgMDAwMDAwMDAgIDAwMCAgIDAwMCAgIDAwMDAwMDAgIDAwMCAgIDAwMDAwMDAgICAwMDAgICAwMDBcbjAwMCAgIDAwMCAgMDAwICAwMDAgICAwMDAgIDAwMCAgICAgICAwMDAwICAwMDAgIDAwMCAgICAgICAwMDAgIDAwMCAgIDAwMCAgMDAwMCAgMDAwXG4wMDAgICAwMDAgIDAwMCAgMDAwMDAwMDAwICAwMDAwMDAwICAgMDAwIDAgMDAwICAwMDAwMDAwICAgMDAwICAwMDAgICAwMDAgIDAwMCAwIDAwMFxuMDAwICAgMDAwICAwMDAgIDAwMCAwIDAwMCAgMDAwICAgICAgIDAwMCAgMDAwMCAgICAgICAwMDAgIDAwMCAgMDAwICAgMDAwICAwMDAgIDAwMDBcbjAwMDAwMDAgICAgMDAwICAwMDAgICAwMDAgIDAwMDAwMDAwICAwMDAgICAwMDAgIDAwMDAwMDAgICAwMDAgICAwMDAwMDAwICAgMDAwICAgMDAwXG4jIyNcblxueyBDb2xvcjMsIFRyYW5zZm9ybU5vZGUsIFZlY3RvcjMgfSA9IHJlcXVpcmUgJ2JhYnlsb25qcydcbnsgY29sb3JzIH0gPSByZXF1aXJlICdreGsnXG57IHJhbmRvbSB9ID0gTWF0aFxueyB2ZWMgfSA9IHJlcXVpcmUgJy4vcG9seS9tYXRoJ1xuZ2VuZXJhdGUgPSByZXF1aXJlICcuL3BvbHkvZ2VuZXJhdGUnXG5cbmNsYXNzIERpbWVuc2lvbiBleHRlbmRzIFRyYW5zZm9ybU5vZGVcblxuICAgIEA6IChAd29ybGQsIEBzY2FsZSwgaW5kZXgpIC0+XG4gICAgICAgIFxuICAgICAgICBwb3MgPSBbXG4gICAgICAgICAgICB2ZWMgMiAwIDBcbiAgICAgICAgICAgIHZlYyAwIDIgMFxuICAgICAgICAgICAgdmVjIDAgMCAyXG4gICAgICAgICAgICB2ZWMgLTIgMCAwXG4gICAgICAgICAgICB2ZWMgMCAtMiAwXG4gICAgICAgICAgICB2ZWMgMCAwIC0yXG4gICAgICAgICAgICBdW2luZGV4XVxuICAgICAgICBcbiAgICAgICAgQHNjZW5lID0gQHdvcmxkLnNjZW5lXG4gICAgICAgIHN1cGVyICdkaW1lbnNpb24nIEBzY2VuZVxuICAgICAgICBcbiAgICAgICAgQHBvc2l0aW9uLmNvcHlGcm9tIHBvc1xuXG4gICAgICAgIHMgPSBAc2NhbGVcbiAgICAgICAgQHNjYWxpbmcgPSB2ZWMgcywgcywgc1xuICAgICAgICAgICAgICAgICBcbiAgICAgICAgc2hhcGVzID0gWydoMC4wMkMnJ2gwLjAyTycnaDAuMDJEJydoMC4wMmRqQycnaDAuMDJUJydoMC4wMkknXVxuICAgICAgICBjb2xvcnMgPSBbXG4gICAgICAgICAgICBuZXcgQ29sb3IzIDEgMC41IDAuNVxuICAgICAgICAgICAgbmV3IENvbG9yMyAwLjUgMSAwLjVcbiAgICAgICAgICAgIG5ldyBDb2xvcjMgMC41IDAuNSAxXG4gICAgICAgICAgICBuZXcgQ29sb3IzIDEgMCAxXG4gICAgICAgICAgICBuZXcgQ29sb3IzIDAgMSAxXG4gICAgICAgICAgICBuZXcgQ29sb3IzIDEgMSAwXG4gICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgXG4gICAgICAgIGZvciBpIGluIFswLi4uNV1cbiAgICAgICAgICAgIGluc3QgPSBAd29ybGQuc2hhcGVzLmNyZWF0ZSBzaGFwZXNbaW5kZXhdLCBjb2xvcnNbaW5kZXhdXG4gICAgICAgICAgICBzID0gMSAtIGkqMC4yXG4gICAgICAgICAgICBpbnN0LnNjYWxpbmcgPSBuZXcgVmVjdG9yMyBzLCBzLCBzXG4gICAgICAgICAgICBpbnN0LnBhcmVudCA9IEBcbiAgICAgICAgXG4gICAgZGVsOiAtPlxuICAgICAgICAjIGtsb2cgXCJkaW0gZGVsICN7QG5hbWV9XCJcbiAgICAgICAgQGRpc3Bvc2UoKVxuICAgICAgICAgICAgICAgIFxubW9kdWxlLmV4cG9ydHMgPSBEaW1lbnNpb25cbiJdfQ==
//# sourceURL=../coffee/dimension.coffee